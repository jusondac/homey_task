Failures:

  1) Comment#author returns user display name
     Failure/Error: expect(comment.author).to eq('John doe')
     
       expected: "John doe"
            got: "John.doe"
     
       (compared using ==)
     # ./spec/models/comment_spec.rb:25:in `block (3 levels) in <top (required)>'

  2) ProjectMembership enums is expected to define :role as an enum backed by an integer with values ‹{member: "member", admin: "admin"}›
     Failure/Error: it { should define_enum_for(:role).with_values(member: 'member', admin: 'admin') }
     
       Expected ProjectMembership to define :role as an enum backed by an
       integer, mapping ‹"member"› to ‹"member"› and ‹"admin"› to ‹"admin"›.
       However, :role is a string column.
     # ./spec/models/project_membership_spec.rb:17:in `block (3 levels) in <main>'

  3) Project#conversation_history filters out items without created_at
     Failure/Error: expect(history).not_to include(comment1)
     
       expected [#<Comment id: 1, project_id: 1, content: "This is comment 8 content", author: nil, created_at: "2025...025-06-01 11:29:16.477866000 +0000", updated_at: "2025-06-01 11:59:16.478853000 +0000", user_id: 1>] not to include #<Comment id: 1, project_id: 1, content: "This is comment 8 content", author: nil, created_at: "2025-06-01 09:59:16.470237000 +0000", updated_at: "2025-06-01 11:59:16.471064000 +0000", user_id: 1>
       Diff:
       @@ -1 +1,3 @@
       -[#<Comment id: 1, project_id: 1, content: "This is comment 8 content", author: nil, created_at: "2025-06-01 09:59:16.470237000 +0000", updated_at: "2025-06-01 11:59:16.471064000 +0000", user_id: 1>]
       +[#<Comment id: 1, project_id: 1, content: "This is comment 8 content", author: nil, created_at: "2025-06-01 09:59:16.470237000 +0000", updated_at: "2025-06-01 11:59:16.471064000 +0000", user_id: 1>,
       + #<StatusChange id: 1, project_id: 1, from_status: "pending", to_status: "in_progress", changed_by: "User 3", created_at: "2025-06-01 10:59:16.474529000 +0000", updated_at: "2025-06-01 11:59:16.475262000 +0000">,
       + #<Comment id: 2, project_id: 1, content: "This is comment 9 content", author: nil, created_at: "2025-06-01 11:29:16.477866000 +0000", updated_at: "2025-06-01 11:59:16.478853000 +0000", user_id: 1>]
       
     # ./spec/models/project_spec.rb:45:in `block (3 levels) in <main>'

Finished in 1.56 seconds (files took 1.51 seconds to load)
66 examples, 3 failures

Failed examples:

rspec ./spec/models/comment_spec.rb:21 # Comment#author returns user display name
rspec ./spec/models/project_membership_spec.rb:17 # ProjectMembership enums is expected to define :role as an enum backed by an integer with values ‹{member: "member", admin: "admin"}›
rspec ./spec/models/project_spec.rb:39 # Project#conversation_history filters out items without created_at